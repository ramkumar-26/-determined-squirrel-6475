package com.crimetime.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.crimetime.exception.CrimeException;
import com.crimetime.exception.CriminalException;
import com.crimetime.model.Crime;
import com.crimetime.model.Criminal;
import com.crimetime.utility.DBUtil;

public class criminalDaoImpl implements criminalDao {
	

	@Override
	public int addNewCriminal(Criminal c) throws CriminalException {
		// TODO Auto-generated method stub
		int res = 0;
		try(Connection conn =  DBUtil.provideConnection()){
			PreparedStatement ps = conn.prepareStatement("insert into criminal_records values (?,?,?,?,?,?)");
			ps.setInt(1, c.getCriminal_id());
			ps.setString(2, c.getCriminal_name());
			ps.setInt(3, c.getAge());
			ps.setString(4, c.getGender());
			ps.setString(5, c.getMarkInFace());
			ps.setString(6, c.getFirstArrestPlace());
			
			int x = ps.executeUpdate();
			
			if(x>0) {
				System.out.println("Criinal "+c.getCriminal_id()+" Added to the Database! You can now link this criminal with a crime!");
			}else {
				throw new CriminalException("Error Adding Crime!");
			}	
			
		}catch(SQLException e) {
			e.printStackTrace();
			System.out.println("Internal Error!");
		}
	
		return res;
	}

	@Override
	public List<Criminal> displayAllCriminalDetails() throws CriminalException {
		List<Criminal> c = new ArrayList<>();
		
		try(Connection conn =  DBUtil.provideConnection()){
			PreparedStatement ps = conn.prepareStatement("select * from criminal_records");
			ResultSet rs = ps.executeQuery();
			boolean flag = false; 
			while(rs.next()) {
				flag = true;
				c.add(new Criminal(rs.getInt("Criminal_ID"), rs.getString("Criminal_Name"), rs.getInt("Age"), rs.getString("Gender"), rs.getString("Mark_In_Face"), rs.getString("First_Arrest_Place")));
			}
			
			if(flag==false) {
				throw new CriminalException("Empty Records!");
			}
		}catch (SQLException e) {
			// TODO: handle exception
			System.err.println(e.getMessage());
		}
		return c;
	}

	@Override
	public Criminal displayCriminalDetailsWithCrimeID(int criminalID) throws CriminalException {
		// TODO Auto-generated method stub
		
		Criminal c = null;
		
		try(Connection conn =  DBUtil.provideConnection()){
			PreparedStatement ps = conn.prepareStatement("select * from criminal_records where criminal_id = ?");
			ps.setInt(1, criminalID);
			
			ResultSet rs = ps.executeQuery();
			
			if(rs.next()) {
				int criminal_id = rs.getInt("criminal_id");
				String Criminal_Name = rs.getString("Criminal_Name");
				int Age = rs.getInt("Age");
				String gender = rs.getString("Gender");
				String mark_in_face = rs.getString("Mark_In_Face");
				String arrestLocation = rs.getString("First_Arrest_Place");
				c = new Criminal(criminal_id, Criminal_Name, Age, gender, mark_in_face, arrestLocation);
				
			}else {
				throw new CrimeException("No Ciminal Found!");
			}
		}catch(Exception e) {	
			System.err.println(e.getMessage());
		}
		
		
		return null;
	}

	@Override
	public List<Crime> CriminalsLinkedWithCrime(int crimeID) {
		// TODO Auto-generated method stub
		return null;
	}
}
